#!/usr/bin/env bash
#
# Copyright (C) STMicroelectronics Ltd. 2012
#
# This file is part of ATOS.
#
# ATOS is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License v2.0
# as published by the Free Software Foundation
#
# ATOS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# v2.0 along with ATOS. If not, see <http://www.gnu.org/licenses/>.
#
#
# Usage: get usage with atos-explore -h
#

set -e
[ "$DEBUG" = "" ] || set -x

dir=`dirname $0`
dir=`cd $dir; pwd`
PROOT=${PROOT:-proot}

run_script=""
build_script=""
executable=""
configuration_path="./atos-configurations"
verbose="0"
quiet="0"

version() {
    echo "atos-explore version @VERSION@"
}

usage() {
    cat <<EOF

Usage: atos-explore [options] [executables...]

Run Options
      -b <build_script> : build_script to be executed [default: $build_script]

Run Options
      -r <run_script> : run_script to be executed [default: $run_script]

Executable File Options:
      -e <executable> : executable to be instrumented [default: first arg of command]

Configuration Options:
      -C <path> : configuration path [default: $configuration_path]

Misc Options
      -q : quiet output
      -d : debug mode
      -h : output usage
      -v : output version

EOF
}

cleanup() {
    [ ! -f "$tmpfile" ] || rm -f "$tmpfile"
}
trap "cleanup; exit 3" TERM STOP
trap "cleanup" EXIT
tmpfile=`mktemp /tmp/atos-inst.XXXXXX`


while getopts vhdqe:r:b:C: opt; do
    case $opt in
	e) executable="$OPTARG"
	    ;;
	C) configuration_path="$OPTARG"
	    ;;
	r) run_script="$OPTARG"
	    ;;
	b) build_script="$OPTARG"
	    ;;
	d) verbose=1
	    ;;
	q) quiet=1
	    ;;
	v) version; exit 0
	    ;;
	h) usage; exit 0
	    ;;
	?) usage; exit 2
	    ;;
    esac
done

shift $((OPTIND - 1))

[ "$executable" != "" ] || executable="$1"

if [ "$configuration_path" = "" ]; then
    echo "`basename $0`: error: missing configuration path" >&2
    exit 1
fi

mkdir -p "$configuration_path"
if [ "$build_script" != "" -a "$run_script" != "" ]; then
    rm -rf "$configuration_path"/*
fi
configuration_path=`cd "$configuration_path"; pwd`
profile_path="$configuration_path/profiles"
results_db="$configuration_path/results.db"

if [ -f "$configuration_path/targets" ]; then
    executable=`head -1 "$configuration_path/targets"`
fi
if [ "$executable" = "" ]; then
    echo "`basename $0`: error: missing executable" >&2
    exit 1
fi

identifier=`basename "$executable"`


if [ "$build_script" != "" ]; then
    [ "$quiet" = "1" ] || echo "Auditing build..."
    $dir/atos-audit $build_script
fi

if [ "$run_script" != "" ]; then
    [ "$quiet" = "1" ] || echo "Auditing run..."
    $dir/atos-raudit $run_script
fi

[ "$quiet" = "1" ] || echo "Computing build dependencies..."
$dir/atos-deps "$executable"

[ "$quiet" = "1" ] || echo "Running reference execution ($identifier:REF)..."
variant=REF
options=
echo "ATOS: _version_: `$0 -v`" >"$results_db"
echo "ATOS: $identifier: $variant: conf: $options" >>"$results_db"
$dir/atos-run -f 3 -i "$identifier" -w "REF" 3>>"$results_db"

for gopt in "-O2" "-Os" "-O3"; do
    [ "$quiet" = "1" ] || echo "Profiling build $gopt..."
    $dir/atos-profile -a "$gopt" -p $profile_path$gopt >"$configuration_path/profile$gopt.log" 2>&1
    for opts in "" "-flto"; do
	options="-fprofile-use $gopt $opts"
	variant=OPT`echo $options | sed 's/ //g'`
	options="$options -fprofile-correction -Wno-error=coverage-mismatch -fprofile-dir=$profile_path$gopt"
	[ "$quiet" = "1" ] || echo "Building ($identifier:$variant)..."
	$dir/atos-opt -a "$options -v" >"$configuration_path/build-$variant.log"  2>&1
	[ "$quiet" = "1" ] || echo "Running ($identifier:$variant)..."
	echo "ATOS: $identifier: $variant: conf: $options" >>"$results_db"
	$dir/atos-run -f 3 -i "$identifier" -w "$variant" 3>>"$results_db"
    done
done
