#!/usr/bin/env bash
#
# Copyright (C) STMicroelectronics Ltd. 2012
#
# This file is part of ATOS.
#
# ATOS is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License v2.0
# as published by the Free Software Foundation
#
# ATOS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# v2.0 along with ATOS. If not, see <http://www.gnu.org/licenses/>.
#
#
# Usage: get usage with atos-play -h
#

set -e
[ "$DEBUG" = "" ] || set -x

dir=`dirname $0`
dir=`cd $dir; pwd`
libdir=`cd $dir/../lib/atos; pwd`
pythondir="$libdir/python"

configuration_path="./atos-configurations"
objective=time
executables=""
identifier=""
quiet="0"
dryrun=""
print=""
ref=0
local_id=""
opt_tradeoffs=""
opt_nb=""
f_set=0

version() {
    echo "atos-play version @VERSION@"
}

usage() {
    cat <<EOF

Usage: atos-play [options] [--] [command...]

Objective Options:
      -f <objective> : defined the objective function [default: $objective]
      -s <tradeoff> : get best tradeoff results
      -N <nb> : get nb best points given objective or tradeoff [default: 1]
      -r : get reference results
      -l : get result identified by local_id

Configuration Options:
      -C <path> : configuration path [default: $configuration_path]
      -e <executables>: executables targets [default: inferred from configuration]
      -i <identifier> : identifier of run [default: executables basename]

Build Configuration:
      -n : dry run, output build commands only
      -p : print configuration only
      -P : print configuration variant id only

Misc Options
      -q : quiet output
      -h : output usage
      -v : output version

EOF
}

cleanup() {
    :
}
trap "cleanup; exit 3" TERM STOP
trap "cleanup" EXIT

while getopts vhqnpPrl:C:f:e:i:s:N: opt; do
    case $opt in
	f) objective="$OPTARG"; f_set=1
	    ;;
	C) configuration_path="$OPTARG"
	    ;;
	e) executables="$OPTARG"
	    ;;
	i) identifier="$OPTARG"
	    ;;
	s) opt_tradeoffs="$opt_tradeoffs --tradeoff=$OPTARG"
	    ;;
	N) opt_nb="-N $OPTARG"
	    ;;
	n) dryrun="-n"
	    ;;
	p) print="-p"
	    ;;
	P) print="-P"
	    ;;
	r) ref=1
	    ;;
	q) quiet=1
	    ;;
	l) local_id="$OPTARG"
	    ;;
	v) version; exit 0
	    ;;
	h) usage; exit 0
	    ;;
	?) usage; exit 2
	    ;;
    esac
done

shift $((OPTIND - 1))

if [ ! -d "$configuration_path" ]; then
    echo "error: `basename $0`: configuration missing: $configuration_path" >&2
    exit 1
fi

if [ "$identifier" = "" ]; then
    if [ "$executables" = "" ]; then
	if [ -f "$configuration_path/targets" ]; then
	    executables=`cat "$configuration_path/targets"`
	else
	    echo "error: `basename $0`: error: no target executable and no identifier specified" >&2
	    exit 1
	fi
    fi
    identifier=""
    sep=""
    for i in $executables; do
	identifier="$identifier$sep"`basename "$i"`
	sep="-"
    done
fi

if [ "$objective" != time -a "$objective" != size ]; then
    echo "`basename $0`: error: unknown objective: $objective" >&2
    exit 1
fi

if [ "$f_set" = "1" -a "$opt_tradeoffs" != "" ]; then
    echo "`basename $0`: error:  options -f and -s cannot by specified at the same time" >&2
    exit 1
fi

if [ "$ref" = "1" ]; then
    select_opt="--variant=REF"
elif [ "$local_id" != "" ]; then
    select_opt="--hash=$local_id"
elif [ "$opt_tradeoffs" != "" ]; then
    select_opt="$opt_tradeoffs"
elif [ "$objective" == "size" ]; then
    select_opt="--tradeoff=0.2"
else
    select_opt="--tradeoff=5.0"
fi

$pythondir/atos/atos_lib.py play \
    -C $configuration_path -i $identifier $select_opt $opt_nb $print $dryrun "$@"
