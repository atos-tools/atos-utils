#!/usr/bin/env bash
#
# Copyright (C) STMicroelectronics Ltd. 2012
#
# This file is part of ATOS.
#
# ATOS is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License v2.0
# as published by the Free Software Foundation
#
# ATOS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# v2.0 along with ATOS. If not, see <http://www.gnu.org/licenses/>.
#
#
# Usage: get usage with atos-raudit -h
#

set -e
[ "$DEBUG" = "" ] || set -x

dir=`dirname $0`
dir=`cd $dir; pwd`
PROOT=${PROOT:-proot}

configuration_path="./atos-configurations"
outfile=""
quiet=0
get_results_script=""

version() {
    echo "atos-raudit version @VERSION@"
}

usage() {
    cat <<EOF

Usage: atos-raudit [options] [--] [command...]

Output File Options:
      -o <outfile> : output audit file into <file> [default: $configuration_path/run.audit]

Configuration Options:
      -C <path> : configuration path [default: $configuration_path]
      -t <get_results_script> : get_results_script to be executed [default: none]

Misc Options
      -q : quiet output
      -h : output usage
      -v : output version

EOF
}

cleanup() {
    :
}
trap "cleanup; exit 3" TERM STOP
trap "cleanup" EXIT

while getopts vhqo:C:t: opt; do
    case $opt in
	o) outfile="$OPTARG"
	    ;;
	C) configuration_path="$OPTARG"
	    ;;
	t) get_results_script="$OPTARG"
	    ;;
	q) quiet=1
	    ;;
	v) version; exit 0
	    ;;
	h) usage; exit 0
	    ;;
	?) usage; exit 2
	    ;;
    esac
done

shift $((OPTIND - 1))

if [ "$1" = "" ]; then
    echo "error: `basename $0`: missing run command" >&2
    exit 1
fi

[ "$quiet" = "1" ] || echo "Auditing run..."
if [ "$outfile" = "" ]; then
    mkdir -p $configuration_path
    outfile="$configuration_path/run.audit"
    touch "$outfile"
    run_sh="$configuration_path/run.sh"
    echo "#!/bin/sh" >$run_sh
    echo -n "cd $PWD && \$ARUN"  >>$run_sh
    for a in "$@"; do
	echo -n " \"$a\""  >>$run_sh
    done
    echo >>$run_sh
    chmod 755 $run_sh
    if [ "$get_results_script" != "" ]; then
	res_sh="$configuration_path/get_res.sh"
	echo "#!/bin/sh" >$res_sh
	echo "cd $PWD && $get_results_script" >>$res_sh
	chmod 755 $res_sh
    fi
fi

exec "$@"
