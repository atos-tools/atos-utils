include conf.mk

LTO=0
CPP=0
COPT=
FLAG=
CSV_DIR=.

config_dir=./atos-configurations
FLAGS=flags.inline.cfg flags.loop.cfg flags.optim.cfg

TESTS=-O0 -O1 -O2 -Os -O3
ifneq ($(findstring 4.5., $(GCC_VERSION)), 4.5.)
TESTS+=-Ofast
endif

plugindir:=$(ROOT)/plugins/acf-plugin/build/gcc-$(GCC_VERSION)/x86_64/x86_64

csv_root=CSV_
CSV_FILES=$(wildcard $(CSV_DIR)/*.csv)
CSV_CHECK=$(CSV_FILES:.csv=.check)

XOPTS=
SRCC=acf_test_main.c
MK_FLAG=COPT=$(COPT)

ifeq ($(LTO), 1)
XOPTS=-DLTO -flto
SRCC+=acf_test_func.c
MK_FLAG+=LTO=1
LTOOOPT=-flto
endif

COMPILER=gcc
CEXT=c
CFUNC=func1

SRCS=$(SRCC)
ifeq ($(CPP), 1)
COMPILER=g++
CEXT=cpp
CFUNC=_Z5func1Pi
SRCS=$(SRCC:.c=.cpp)
MK_FLAG+=CPP=1
endif

ifeq ($(V),1)
QUIET=
else
QUIET=@echo $@;
endif

# In case there is no .csv file generated by atos_acf_tests.py
all:

none:

config:
	$(QUIET)$(COMPILER) -o acf_test_config acf_test_config.$(CEXT) && \
	rm -f acf_test_config

acf_tests: $(FLAGS)

$(FLAGS):
	$(QUIET)$(MAKE) -s CSV_DIR=$(csv_root)$(subst .cfg,,$@) FLAG=$@ csv_tests

csv_generate:
	$(QUIET)rm -rf $(CSV_DIR) && \
	mkdir -p $(CSV_DIR) && \
	cp $(config_dir)/$(FLAG) $(CSV_DIR)/$(FLAG) && \
	python ./gen_acf_tests.py --flags=$(CSV_DIR)/$(FLAG) --csvdir=$(CSV_DIR) --cfunc=$(CFUNC)

csv_tests: $(TESTS)

$(TESTS): csv_generate
	$(QUIET)$(MAKE) -s -i COPT=$@ $(CSV_CHECK)

%.check: %.csv
	id=$*$(COPT)$(LTOOPT); \
	$(COMPILER) $(COPT) $(XOPTS) -fplugin=$(plugindir)/acf_plugin.so -fplugin-arg-acf_plugin-verbose -fplugin-arg-acf_plugin-csv_file=$< $(SRCS) -o $$id.out > $$id.trace.log 2>$$id.error.log ; \
	if [ `cat $$id.error.log | wc -l` -ne 0 ]; then \
	  echo "$(MAKE) $*.chk $(MK_FLAG) => FAILED"; \
	  cat $$id.error.log ; \
	elif [ `cat $$id.trace.log | wc -l` -ne `cat $< | wc -l` ]; then \
	  echo "$(MAKE) $*.chk $(MK_FLAG) => FAILED"; \
	  cat $$id.trace.log $$id.error.log ; \
	else \
	  echo "$(MAKE) $*.chk $(MK_FLAG) => SUCCESS"; \
	fi ; \
	rm -f $$id.out $$id.trace.log $$id.error.log

%.chk: %.csv
	$(COMPILER) $(COPT) $(XOPTS) -fplugin=$(plugindir)/acf_plugin.so -fplugin-arg-acf_plugin-verbose -fplugin-arg-acf_plugin-csv_file=$< $(SRCS) -o $*.out


clean:
	rm -rf $(csv_root)* $(config_dir)
